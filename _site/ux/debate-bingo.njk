---
layout: false
title: Debate Bingo
---
<!doctype html>
<html lang="en" class="bg-transparent antialiased" data-theme x-data="app">

  <head>
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>{{ title }}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, interactive-widget=overlays-content" />
    <link href="https://fonts.googleapis.com" rel="preconnect" />
    <link href="https://fonts.gstatic.com" rel="preconnect" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="preload" as="style" onload="this.onload=null;this.rel='stylesheet'" />

    <link href="https://cdn.jsdelivr.net/npm/daisyui@4/dist/full.min.css" rel="stylesheet" />
    <style>
      html[data-theme] {
        color-scheme: light;
        font-family: 'Inter', sans-serif;
      }
      :root {
        --animation-btn: 0.25s;
        --animation-input: 0.2s;
        --border-btn: 1px;
        --btn-focus-scale: 0.95;
        --rounded-badge: 1.9rem;
        --rounded-box: 0.75rem;
        --rounded-btn: 0.25rem;
        --tab-border: 1px;
        --tab-radius: 0.5rem;
        --p: 51.800000000000004% 0.2258 323.9487;
        --pc: 90.46% 0.0451 323.6555;
        --s: 51.03% 0 0;
        --sc: 90.06% 0 0;
        --a: 72.53% 0.1752 349.7607;
        --ac: 14.26% 0.0359 348.6875;
        --n: 32.11% 0 0;
        --nc: 86.38% 0 0;
        --b1: 100% 0 0;
        --b2: 90.06% 0 0;
        --b3: 80.15% 0 0;
        --bc: 20.02% 0 0;
        --in: 80.91000000000001% 0.0956 251.8128;
        --inc: 16.17% 0.0196 255.3312;
        --su: 77.29% 0.1535 163.2231;
        --suc: 15.43% 0.0309 161.8964;
        --wa: 83.66% 0.1165 66.2896;
        --wac: 16.869999999999997% 0.0229 65.2712;
        --er: 63.68000000000001% 0.2078 25.3313;
        --erc: 13% 0.0398 24.5725;
      }
    </style>
    <style data-twind></style>

  </head>

  <body class="bg-base-100 text-base-content !block" style="display: none;">
    <div id="app" class="min-h-screen flex-(& col)" x-cloak>
      <header class="pt-8 px-8 text-center flex-none"><h1 class="font-black text-xl lg:(text-[calc(2vw)])">{{ title }}</h1></header>
      <main class="p-8 flex-1 grid">
        <table class="table border-(t b l)">
          <tbody>
            <template x-for="row in 5" hidden>
              <tr>
                <template x-for="col in 5" hidden>
                  <td class="border-r text-(center xs) font-semibold relative md:(text-base) lg:(text-xl)">
                    <button
                      @click.prevent="selectedSquares[(row-1)*5 + (col-1)] = !selectedSquares[(row-1)*5 + (col-1)]; checkBingo()"
                      x-text="squares[(row-1)*5 + (col-1)]"
                      :class="selectedSquares[(row-1)*5 + (col-1)] && 'bg-error/10 text-error'"
                      class="p-2 absolute inset-0 break-words [hyphens:auto]"
                    ></button>
                  </td>
                </template>
              </tr>
            </template>
          </tbody>
        </table>
        <div x-show="bingo" x-transition class="bg-green-500 flex items-center justify-center fixed inset-0 backdrop-blur-sm">
          <h2 class="text-(6xl white) font-black">BINGO!</h2>
          <div class="absolute top-2 right-2">
            <button @click.prevent="bingo = false; selectedSquares = Array(25).fill(false); squares = shuffleArray(squares);" class="btn btn-ghost btn-circle text-white" aria-label="Start over"><iconify-icon icon="mdi:reload" width="24px" height="24px" class="iconify"></iconify-icon></button>
          </div>
        </div>
      </main>
    </div>
    <script type="module">
      // icons
      import 'https://esm.run/iconify-icon';

      // alpine
      import Alpine from 'https://esm.run/alpinejs';
      document.addEventListener('alpine:init', () => {
        Alpine.data('app', () => ({
          squares: [
            'Federal overreach',
            'Radical left',
            'Israel',
            'My administration',
            'Protect our borders',
            'Border crisis',
            'Inflation',
            'America first',
            'Climate change',
            'Strong leadership',
            'Women\'s rights',
            'Reproductive freedom',
            'Russia / Ukraine',
            'Failing policies',
            'Social security',
            'Make America Great Again',
            'Open borders',
            'Tax cuts',
            'Criminal justice reform',
            'Sanctuary cities',
            'Jobs and growth',
            'Economic disaster',
            'Law and order',
            'Securing our future',
            'Foreign policy failure',
          ],
          selectedSquares: Array(25).fill(false),
          bingo: false,
          shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
              const j = Math.floor(Math.random() * (i + 1));
              [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
          },
          checkBingo() {
            // Check rows
            for (let i = 0; i < 5; i++) {
              if (this.selectedSquares.slice(i*5, i*5+5).every(x => x)) {
                this.bingo = true;
                return;
              }
            }
            // Check columns
            for (let i = 0; i < 5; i++) {
              if ([0,1,2,3,4].every(j => this.selectedSquares[i + j*5])) {
                this.bingo = true;
                return;
              }
            }
            // Check diagonals
            if ([0,6,12,18,24].every(i => this.selectedSquares[i]) ||
                [4,8,12,16,20].every(i => this.selectedSquares[i])) {
              this.bingo = true;
              return;
            }
          },
          init() {
            this.squares = this.shuffleArray(this.squares)
          },
        }));
      });
      window.Alpine = Alpine;
      Alpine.start();

      // twind
      import { install, injectGlobal } from 'https://esm.run/@twind/core';
      import presetAutoprefix from 'https://esm.run/@twind/preset-autoprefix';
      import presetTailwind from 'https://esm.run/@twind/preset-tailwind';
      install({
        presets: [presetAutoprefix(), presetTailwind()],
        darkMode: 'class',
        hash: false,
        theme: {
          extend: {
          },
        },
        rules: [
          ['text-wrap-(unset|wrap|nowrap|balance|pretty)', 'textWrap'],
          ['container-', ({ $$ }) => `mx-auto w-full max-w-${$$}`],
        ],
      });
      // global css
      injectGlobal`
        @layer base {
          hr { @apply [border-color:var(--fallback-b2,oklch(var(--b2)/1))]; }
          [x-cloak] { @apply hidden; }
        }
      `
    </script>
  </body>

</html>
